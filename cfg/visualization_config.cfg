#!/usr/bin/env python
PACKAGE = "simple_kinect_motion_visualizer"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("redHistorySize",    int_t,    0, "redHistorySize", 2, 1, 10)
gen.add("redGain",    double_t,    0, "redGain", 1.3,  0.0, 2.0)
gen.add("redIntensityThreshold",    int_t,    0, "redIntensityThreshold", 50,  0, 255)

gen.add("greenHistorySize",    int_t,    0, "greenHistorySize", 2, 1, 10)
gen.add("greenGain",    double_t,    0, "greenGain", 0.8,  0.0, 2.0)
gen.add("greenIntensityThreshold",    int_t,    0, "greenIntensityThreshold", 70,  0, 255)

gen.add("blueHistorySize",    int_t,    0, "blueHistorySize", 2, 1, 10)
gen.add("blueGain",    double_t,    0, "blueGain", 1.2,  0.0, 2.0)
gen.add("blueIntensityThreshold",    int_t,    0, "blueIntensityThreshold", 70,  0, 255)

gen.add("redlpfGainUp",    double_t,    0, "lpf Gain Up (double)", 0.5,  0.0, 1.0)
gen.add("redlpfGainDown",    double_t,    0, "lpf Gain Down (double)", 0.73,  0.0, 1.0)

gen.add("greenlpfGainUp",    double_t,    0, "lpf Gain Up (double)", 0.45,  0.0, 1.0)
gen.add("greenlpfGainDown",    double_t,    0, "lpf Gain Down (double)", 0.78,  0.0, 1.0)

gen.add("bluelpfGainUp",    double_t,    0, "lpf Gain Up (double)", 0.8,  0.0, 1.0)
gen.add("bluelpfGainDown",    double_t,    0, "lpf Gain Down (double)", 0.3,  0.0, 1.0)

gen.add("lpfRedIntensityThreshold",    int_t,    0, "blueIntensityThreshold", 25,  0, 255)
gen.add("lpfGreenIntensityThreshold",    int_t,    0, "blueIntensityThreshold", 25,  0, 255)
gen.add("lpfBlueIntensityThreshold",    int_t,    0, "blueIntensityThreshold", 25,  0, 255)

gen.add("filterQuadraticCorrelation",    bool_t,    0, "Quadratic Correlation instead of Linear (bool)", True)
gen.add("musicGainDivider",    double_t,    0, "gain Divider", 550,  1, 10000)
gen.add("minusTerm",    double_t,    0, "minus Term", 0.0,  0.0, 2.0)
gen.add("lowerBound",    double_t,    0, "lower Bound of music lpf", 0.002,  0.0, 0.1)
gen.add("preLPFMusicGain", double_t, 0, "preLPF for lpfin Music for smooth transitions",    .97, 0.0,   1.0)
gen.add("preLPFMusicGainDifferential", double_t, 0, "preLPF for lpfin Music for smooth transitions of Differential gain",    .97, 0.0,   1.0)

gen.add("motorMultiplier",    int_t,    0, "motor Multiplier from Filter param to motor speed", 90000,  20000, 200000)
gen.add("motorMultiplierDifferential",    int_t,    0, "motor Multiplier from Filter param to motor speed of derivative sensitive motors", 90000,  20000, 200000)


# For simple diff calculation:
gen.add("LPFgainSimpleDiff",    double_t,    0, "LPF gain for simpler differential calculation", 0.92,  0.0, 1.0)
gen.add("sensitivitySimpleDiff",    int_t,    0, "sensitivity to simpler calculation", 100,  0, 2000)


#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "simple_kinect_motion_visualizer_node", "Visualization"))
